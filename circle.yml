machine:
#  timezone:
#    Europe/Prague

#  ruby:
#    version:
#      2.4.0

  node:
    version:
      5.9.0
#
#  hosts:
#    circlehost: 127.0.0.1
#    dev.mycompany.com: 127.0.0.1
#
# Add some environment variables
#  environment:
#    CIRCLE_ENV: test
#    DATABASE_URL: postgresql://ubuntu:@127.0.0.1:5432/circle_test
#
## Customize checkout
#checkout:
#  post:
#    - git submodule sync
#    - git submodule update --init # use submodules
#
## Customize dependencies
dependencies:
  pre:
    - gem install jasmine
    - npm install -g eslint
    - npm install .

  override:
    - bundle install: # note ':' here
        timeout: 180 # fail if command has no output for 3 minutes
        # IMPORTANT NOTE: ^^ the timeout modifier above must be
        # double indented (four spaces) from the previous line

  # cache and restore between builds
  cache_directories:
    - "sessions"
    - "build"
    - "tenants"
    #- "node_modules"

## Customize database setup
database:
  override:
    - bash ./01-init_db_design.sh
#    # replace CircleCI's generated database.yml
#    - cp config/database.yml.ci config/database.yml
#    - bundle exec rake db:create db:schema:load

## Customize test commands
test:
#  override:
#    - phpunit test/unit-tests # use PHPunit for testing
  commands:
    - eslint **/*.js
    - eslint *.js
    - bash ./02-analyze.sh
    - bash ./03-deploy.sh
    - bash ./04-test.sh
  post:
    - curl -sSL https://download.sourceclear.com/ci.sh | sh
    - bundle exec rake jasmine:ci: # add an extra test type
      environment:
        RAILS_ENV: test
        RACK_ENV: test

## Customize deployment commands
deployment:
  staging:
    branch: master
    thinx:
      appname: api

## Custom notifications
notify:
  - curl -X POST --data-urlencode 'payload={"text":"THiNX integration completed."}' https://hooks.slack.com/services/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
  webhooks:
    # A list of hashes representing hooks. Only the url field is supported.
