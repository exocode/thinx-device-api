version: '3.1'

networks:
  nat:
    external: true
  internal:
    external: false

services:
version: "3.2"

networks:
  nat:
    external: true
  internal:
    external: false

services:

#  reverse-proxy:
#    env_file:
#      - .env
#    image: traefik:v1.7.12-alpine
#    command:
#      - "--defaultentrypoints=http,https"
#      - "--entrypoints=Name:http Address::80 Redirect.EntryPoint:https"
#      - "--entrypoints=Name:https Address::443 Compress:true TLS"
#      - "--retry"
#      - "--api"
#      - "--docker"
#      - "--docker.domain=docker.localhost"
#      - "--docker.exposedbydefault=false"
#      - "--loglevel=WARNING"
#      - "--acme=true"
#      - "--acme.acmelogging=true"
#      - "--acme.storage=/traefik/acme.json"
#      - "--acme.entryPoint=https"
#      - "--acme.httpchallenge"
#      - "--acme.httpchallenge.entryPoint=http"
#      - "--acme.onHostRule=true"
#    - "--acme.email=matej@keyguru.eu"
#      - "--acme.caServer=https://acme-v02.api.letsencrypt.org/directory"
#      - "--acme.domains=${APP_HOSTNAME},${WEB_HOSTNAME},${DEV_HOSTNAME},${IMAGES_HOSTNAME},${FILES_HOSTNAME},${CONSOLE_HOSTNAME},${LANDING_HOSTNAME}"
#    restart: unless-stopped
#    ports:
#      - "80:80"   # The HTTP port, should be 80 outside (does not collide on empty box)
#      - "443:443"  # The HTTPS port, ditto.
#      - "8080:8080" # Traefik port
#      - "8888:8888" # Redis commander port, should have authenticatioern in development and be disabled in production
#    networks:
#      - nat
#      - internal
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - /etc/letsencrypt/live/thinx.cloud:/cert
#      - ./traefik:/traefik
#    labels:
#      - "traefik.port=8080"
#      - "traefik.backend=traefik"
#      - "traefik.frontend.auth.basic.users=traefik:$$apr1$$JVrTyD7r$DwX82aghrfYFJXh.kFfbU."
#      - "traefik.frontend.rule=Host:${DEV_HOSTNAME}"

  thinx-api:
    # because of DIND builders
    privileged: true
    # reserve enough for builders
    shm_size: 1024M
    # tty: true
    restart: always
    networks:
      - nat
      - internal
    env_file: ./.env
    environment:
      - THINX_HOSTNAME=${THINX_HOSTNAME}
      - THINX_OWNER_EMAIL=${THINX_OWNER_EMAIL}
      - REVISION=${REVISION}
      - ROLLBAR_ACCESS_TOKEN=${ROLLBAR_ACCESS_TOKEN}
      - ROLLBAR_ENVIRONMENT=${ROLLBAR_ENVIRONMENT}
      #- SQREEN_TOKEN=${SQREEN_TOKEN} # (optional, free for open-source)
    build: .
    # image: suculent/thinx-device-api
    ports:
#      - 7441:7441 # Reserved for Web HTTPS, 7440 is Web HTTP
      - 7442:7442 # API (HTTP)
      - 7443:7443 # API (HTTPS)
      - 7444:7444 # WebSocket
      - 7445:7445 # WebSocket SSL (reserved)
      - 9002:9002 # Incoming GIT (User) Webhooks
    volumes:
      - /mnt/data/deploy:/mnt/data/deploy # Deployment
      - /mnt/data/mosquitto:/mnt/data/mosquitto # Authentication
      - /mnt/data/repos:/mnt/data/repos # Git
      - /mnt/data/ssl:/mnt/data/ssl
      - /mnt/data/ssh_keys:/mnt/data/ssh_keys
      - /var/run/docker.sock:/var/run/docker.sock # DIND
      - /var/lib/docker
      - /cache
    labels:
      - "traefik.docker.network=nat"
      - "traefik.enable=true"
      - "traefik.port=7442"
      - "traefik.backend=thinx-api"
      - "traefik.frontend.rule=Host:${THINX_HOSTNAME}"
